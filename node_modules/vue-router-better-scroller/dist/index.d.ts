import { Plugin } from 'vue';
import { RouteLocationNormalized, RouteLocationNormalizedLoaded, Router } from 'vue-router';

type Awaitable<T> = T | Promise<T>;
/**
 * Scroll position similar to
 * {@link https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions | `ScrollToOptions`}.
 * Note that not all browsers support `behavior`.
 */
interface ScrollPositionCoordinates {
    behavior?: ScrollOptions['behavior'];
    left?: number;
    top?: number;
}
type NavigationType = 'push' | 'history';
interface RouterScrollHandlerContext {
    to: RouteLocationNormalized;
    from: RouteLocationNormalizedLoaded;
    element: Element | Window;
    selector: string;
    type: NavigationType;
    savedPosition: ScrollPositionCoordinates | undefined;
}
interface RouterScrollHandler {
    (context: RouterScrollHandlerContext): Awaitable<ScrollPositionCoordinates | boolean | void>;
}
interface RouterScrollBehaviorOptions {
    selectors: Record<string, boolean | RouterScrollHandler>;
    /**
     * Default scroll behavior applied, when not specified in the handler
     */
    behavior?: ScrollOptions['behavior'];
}

/**
 * Setup router scroll behavior directly with a router instance.
 */
declare function setupRouterScroller(router: Router, options: RouterScrollBehaviorOptions): void;
/**
 * Set up router scroll behavior as a Vue plugin.
 *
 * @example
 * ```ts
 * import { createRouter } from 'vue-router'
 * import { createRouterScroller } from 'vue-router-better-scroller'
 *
 * const app = createApp(App)
 * const router = createRouter({ ... })
 *
 * app.use(router)
 * app.use(createRouterScroller({ ... }) // <-- this
 *
 * app.mount('#app')
 * ```
 */
declare function createRouterScroller(options: RouterScrollBehaviorOptions): Plugin;

export { createRouterScroller, setupRouterScroller };
